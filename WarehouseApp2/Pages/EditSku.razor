@using WarehouseService.Models;
@using WarehouseApp2.Components;
@page "/skus/{id:int}"
@inject UIStateContainer myStateContainer

@if (Sku is null) {
    <p>Sku not found.</p>
    return;
}
<MudField Label="SKU">@Sku.Name</MudField>
<MudField Label="Description">@Sku.Description</MudField>
<MudTextField @bind-Value="@Sku.Width" Label="Width (feet)" />
<MudTextField @bind-Value="@Sku.Length" Label="Length (feet)" />
<MudTextField @bind-Value="@Sku.Height" Label="Height (feet)" />
<MudTextField @bind-Value="@Sku.Weight" Label="Weight (lbs)" />
<MudTooltip Text="Average number of picking scans per day">
    <MudField Label="Hits">@Sku.Hits</MudField>
</MudTooltip>

<MudList>
    @foreach (var barcode in Sku.Barcodes)
    {
        <MudListItem>
            <MudTextField @bind-Value="@barcode.Code" />
        </MudListItem>
    }
</MudList>

<Comments Notes=@Sku.Notes />

@code {
    [Parameter]
    public int Id { get; set; }
    private Sku? Sku;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Sku = myStateContainer.Skus.Find(s => s.Id == Id);
    }
}
