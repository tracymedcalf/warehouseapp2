@using WarehouseService.Models

@inject NavigationManager Navigate

@inject UIStateContainer stateContainer

<PageTitle>SKUs</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Skus</MudText>


<MudCard Outlined="true">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">
                Auto Assign
            </MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText>
            Selected items (@SkusToAssign?.Count): @(SkusToAssign == null ? "" : string.Join(", ", SkusToAssign.OrderBy(x => x.Name).Select(x => x.Name)))
        </MudText>
    </MudCardContent>
    <MudCardActions>
        <MudTooltip 
            Text="@(SkusToAssign.Any() ? "Auto assign selected items" : "Select items to auto assign")" 
            >
            <MudButton 
                Color="Color.Secondary"
                Disabled="!SkusToAssign.Any()"
                Href="skus/assign"
                Variant="Variant.Filled"
                >
                Go
            </MudButton>
        </MudTooltip>
    </MudCardActions>
</MudCard>

<MudTable 
    @bind-SelectedItems="SkusToAssign" 
    @ref="_table" 
    Bordered=true
    Filter="new Func<Sku,bool>(FilterFunc1)"
    Hover=true
    Items="@MySkus" 
    MultiSelection="true" 
    SelectOnRowClick="true"
    Striped=true
    T="Sku" 
    >
    <ToolBarContent>
        <MudSpacer />
        <MudTextField 
            @bind-Value="searchString1" 
            Placeholder="Search" 
            Adornment="Adornment.Start" 
            AdornmentIcon="@Icons.Material.Filled.Search" 
            IconSize="Size.Medium" 
            Class="mt-0">
        </MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>SKU</MudTh>
        <MudTh>Has Location?</MudTh>
        <MudTh>Description</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="sku">
            <MudLink Href=@($"skus/{context.Id}")>@context.Name</MudLink>
        </MudTd>
        <MudTd DataLabel="Has Location?">@(context.Assignments.Count() == 0 ? "NO" : "YES")</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{50, 100}" />
    </PagerContent>
</MudTable>

@code {
    [Parameter]
    public HashSet<Sku> SkusToAssign { get; set; }

    //private HashSet<Sku> SkusToAssign = new HashSet<Sku>();
    private List<Sku> MySkus = null!;
    private MudTable<Sku> _table;
    private string searchString1 = "";

    private bool FilterFunc1(Sku element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Sku element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Assignments.Count() == 0)// && element.Assignment.Sku.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        MySkus = stateContainer.Skus.ToList();
    }
}
