@using WarehouseApp2.Models;

@page "/locations"

@inject UIStateContainer myStateContainer

<PageTitle>Locations</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Locations</MudText>
<MudTable 
    Items="@MyLocations" 
    Hover=true 
    Bordered=true 
    Striped=true 
    Filter="new Func<PickLocation,bool>(FilterFunc1)" 
    @bind-SelectedItem="selectedItem1"
    >
    <ToolBarContent>
        <MudText Typo="Typo.h6">Pick Locations</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Putaway Type</MudTh>
        <MudTh>SKU</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="location">
            <MudLink Href=@($"locations/{context.Id}")>@context.Name</MudLink>
        </MudTd>
        <MudTd DataLabel="Putaway Type">@context.PutawayType</MudTd>
        <MudTd DataLabel="SKU">@context.Assignment?.Sku.Name</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private string searchString1 = "";
    private PickLocation? selectedItem1 = null;
    private HashSet<PickLocation> selectedItems = new HashSet<PickLocation>();

    private List<PickLocation> MyLocations = null!;

    private bool FilterFunc1(PickLocation element) => FilterFunc(element, searchString1);

    private bool FilterFunc(PickLocation element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Assignment is not null && element.Assignment.Sku.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        MyLocations = myStateContainer.PickLocations.ToList();
    }
}
